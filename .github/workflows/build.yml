name: Release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

permissions: write-all

jobs:
  build-mac-x64:
    runs-on: macos-latest
    name: Build macOS x64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn

      - run: yarn

      - name: Build x64
        run: |
          npm rebuild --arch=x64
          npx electron-rebuild --arch=x64
          yarn build:pre
          yarn electron-builder --mac --x64 -p never

      - name: Upload mac-x64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-x64
          path: release/**/*mac_x64.*

  build-mac-arm64:
    runs-on: macos-latest
    name: Build macOS arm64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn

      - run: |
          brew install rpm
          yarn

      - name: Build arm64
        run: |
          npm rebuild --arch=arm64
          npx electron-rebuild --arch=arm64
          yarn build:pre
          yarn electron-builder --mac --arm64 -p never

      - name: Upload mac-arm64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-arm64
          path: release/**/*mac_arm64.*

  build-linux:
    runs-on: ubuntu-latest
    name: Build Linux x64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn

      - run: yarn

      - name: Build Linux
        run: |
          npm rebuild
          npx electron-rebuild
          yarn build:pre
          yarn electron-builder --linux -p never

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-x64
          path: release/**/*linux_x64.*

  build-linux-arm64:
    runs-on: ubuntu-latest
    name: Build Linux arm64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          yarn

      - name: Build for Linux arm64
        run: |
          export CFLAGS="--target=aarch64-linux-gnu"
          export CXXFLAGS="--target=aarch64-linux-gnu"
          export npm_config_arch=arm64
          export npm_config_target_arch=arm64
          npm rebuild --arch=arm64
          npx electron-rebuild --arch=arm64
          yarn build:pre
          yarn electron-builder --linux --arm64 -p never

      - name: Upload Linux arm64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64
          path: release/**/*linux_arm64.*
          if-no-files-found: ignore

  build-win:
    runs-on: windows-latest
    name: Build Windows x64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn

      - run: yarn

      - name: Build Windows
        run: |
          npm rebuild
          npx electron-rebuild
          yarn build:pre
          yarn electron-builder --win -p never

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: win-x64
          path: release/**/*win_x64.*

  upload-release:
    runs-on: ubuntu-latest
    needs:
      - build-mac-x64
      - build-mac-arm64
      - build-linux
      - build-linux-arm64
      - build-win
    name: Upload to GitHub Release
    steps:
      - uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: sudo apt install gh -y

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: List all artifacts (for debug)
        run: ls -R all-artifacts

      - name: Upload all files to GitHub Release
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: |
          TAG_NAME=${GITHUB_REF##*/}
          gh release upload "$TAG_NAME" all-artifacts/**/* --clobber
